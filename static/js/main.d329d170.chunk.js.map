{"version":3,"sources":["hooks/useWindowDimensions.js","hooks/NavigationContext.js","components/Background/Background.jsx","components/Layout/Layout.jsx","components/Nav/Nav.jsx","components/StickyHeader/StickyHeader.jsx","components/ProfilePhoto/ProfilePhoto.jsx","components/Link/LinkIcon.jsx","components/Link/Link.jsx","components/LinkList/LinkList.jsx","components/LinkList/LinkList.container.jsx","components/Profile/Profile.jsx","components/Profile/Profile.container.jsx","components/DevTool/DevToolIcon.jsx","components/DevTool/DevTool.jsx","components/DevToolList/DevToolList.jsx","components/About/About.jsx","components/About/About.container.jsx","components/Contact/Contact.jsx","components/Contact/Contact.container.jsx","components/Body/Body.jsx","components/ProjectCard/ProjectCard.jsx","components/ProjectPortfolio/ProjectPortfolio.jsx","App.js","serviceWorker.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","NavigationContext","createContext","Background","props","canvasRef","useRef","canvas","current","context","getContext","size","style","interval","setInterval","ctx","h","w","clearRect","trans_x","x","y","Math","cos","sin","trans_y","time","Date","getTime","i","j","r","a","PI","x_0","y_0","moveTo","fillStyle","beginPath","lineTo","fill","draw","clearInterval","className","ref","children","Layout","onScrollFrame","styles","buttonGroup","button","backgroundColor","buttonSelected","color","Nav","useContext","navigation","setCurrentPage","handleChange","event","target","value","preventDefault","ToggleButtonGroup","name","aria-label","defaultValue","ToggleButton","variant","page","onChange","StickyHeader","isSticky","forwardedRef","ProfilePhoto","src","LinkIcon","icon","Provider","Link","label","url","Button","toLowerCase","href","activeStyle","LinkList","links","map","link","index","key","LinkListContainer","updateLinks","axios","then","response","data","feed","entry","gsx$label","$t","gsx$url","catch","err","console","log","Profile","pronouns","title","photo","ProfileContainer","profileData","updateProfileData","gsx$name","gsx$pronouns","gsx$title","gsx$photo","DevToolIcon","padding","DevTool","DevToolList","toolNames","toolName","About","bio","textBlock","Figure","content","split","AboutContainer","setBio","gsx$variant","gsx$content","Contact","email","copyStatus","isMessageVisible","handleCopy","onCopy","text","role","ContactContainer","contactData","updateContactData","gsx$email","setCopyStatus","setIsMessageVisible","setTimeout","Body","ProjectCard","image","description","repository","frontend","backend","languages","libraries","Card","Img","Title","Text","ProjectPortfolio","projects","updateProjects","project","gsx$image","gsx$description","gsx$repository","gsx$frontend","gsx$backend","gsx$languages","gsx$libraries","App","updateNavigation","isStickyHeaderSticky","setIsStickyHeaderSticky","stickyHeaderRef","getBoundingClientRect","top","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d329d170.chunk.js","sourcesContent":["// SOURCE: https://stackoverflow.com/a/36862446\n\nimport { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}","import { createContext } from \"react\";\n\nconst NavigationContext = createContext();\n\nexport default NavigationContext;","import React, { useRef, useEffect } from \"react\";\nimport \"./Background.css\";\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\n\nconst Background = props => {\n    const { height, width } = useWindowDimensions();\n    const canvasRef = useRef(null)\n    \n    const draw = ( ctx, size, h, w ) => {\n        ctx.clearRect(0, 0, size, size);\n        \n        // Transformed coordinate space\n        const trans_x = (x,y) =>\n            x + 0.1 * (Math.cos(5*x) + Math.sin(5*y));\n        \n        const trans_y = (x,y) =>\n            y + 0.1 * (Math.cos(5*x) + Math.sin(5*y));\n        \n\n        const time = (new Date()).getTime() % 20000 / 20000;\n\n        const layers = 8;\n        const symmetry = 9;\n\n        for( let i = 0; i < layers; i++ ) {\n\n            for( let j = 0; j < symmetry; j++ ) {\n\n                // polar coordinate of first vertex\n                let r = i + 1 - time;\n                r = r > 0 ? r : 0;\n                let a = j * 2 * Math.PI / symmetry;\n\n                // cartesian of first vertex\n                const x_0 = r * Math.cos(a);\n                const y_0 = r * Math.sin(a);\n\n                // VERTEX 0\n                // transform, scale, and center\n                ctx.moveTo(\n                    w / 2 + size/10 * trans_x(x_0,y_0),\n                    h / 2 + size/10 * trans_y(x_0,y_0)\n                );\n\n                // color based on vertex A's position\n                ctx.fillStyle = `rgba(\n                    ${190},\n                    ${220*(0.5 + Math.sin( 3*a + Math.PI*r )/2)},\n                    ${190},\n                    ${0.25*(r - 0.5)/layers})`;\n                \n                ctx.beginPath();\n                \n                // in 1 (bottom out at 0)\n                r = --r > 0 ? r : 0;\n                \n                // cartesian of next vertex\n                let x = r * Math.cos(a);\n                let y = r * Math.sin(a);\n\n                // VERTEX 1\n                // transform, scale, and center\n                ctx.lineTo(\n                    w / 2 + size/10 * trans_x(x,y),\n                    h / 2 + size/10 * trans_y(x,y)\n                );\n                \n                // initial radius, CW 1\n                r = i + 1 - time;\n                a = (j - 1) * 2 * Math.PI / symmetry;\n                \n                // cartesian\n                x = r * Math.cos(a);\n                y = r * Math.sin(a);\n\n                // VERTEX 2\n                // transform, scale, and center\n                ctx.lineTo(\n                    w / 2 + size/10 * trans_x(x,y),\n                    h / 2 + size/10 * trans_y(x,y)\n                );\n\n                // VERTEX 0 (return to start)\n                // transform, scale, and center\n                ctx.lineTo(\n                    w / 2 + size/10 * trans_x(x_0,y_0),\n                    h / 2 + size/10 * trans_y(x_0,y_0)\n                );\n                \n                ctx.fill();\n            }\n        }\n    }\n    \n    useEffect(() => {\n        \n        const canvas = canvasRef.current\n        const context = canvas.getContext(\"2d\")\n        \n        const size = (height > width ? height : width);\n        canvas.width = size;\n        canvas.height = size;\n        canvas.style.width = size + \"px\";\n        canvas.style.height = size + \"px\";\n\n        const interval = setInterval(() => {\n            draw(context, size, height, width );\n        }, 50);\n\n        return () => clearInterval(interval);\n    }, [height, width]);\n  \n    return (\n        <div className=\"background-wrapper\">\n            <div className=\"background\">\n                <canvas ref={canvasRef} {...props}/>\n            </div>\n            <div className=\"content\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default Background","import React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport \"./Layout.css\";\n\nconst Layout = ({ onScrollFrame, children }) => {\n    return (\n        <Scrollbars onScrollFrame={onScrollFrame} >\n            <div className=\"layout\" >\n                {children}\n            </div>\n        </Scrollbars>\n    );\n}\n\nexport default Layout;","import React, { useContext } from \"react\";\nimport { ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavigationContext from \"../../hooks/NavigationContext\";\nimport { findByLabelText } from \"@testing-library/react\";\nimport \"./Nav.css\";\n\nconst Nav = () => {\n    const { navigation, setCurrentPage } = useContext(NavigationContext);\n\n    const handleChange = (event) => {\n        setCurrentPage(event.target.value);\n        event.preventDefault();\n    }\n\n    return (\n        <div className=\"nav\">\n            <ToggleButtonGroup\n                name=\"nav\"\n                aria-label=\"Navigation\"\n                defaultValue=\"projects\"\n                style={styles.buttonGroup}\n            >\n                <ToggleButton\n                    name=\"nav\"\n                    variant=\"nav\"\n                    style={navigation.page === \"projects\" ? styles.buttonSelected : styles.button}\n                    value=\"projects\"\n                    onChange={handleChange}\n                >Projects\n                </ToggleButton>\n                <ToggleButton\n                    name=\"nav\"\n                    variant=\"nav\"\n                    style={navigation.page === \"about\" ? styles.buttonSelected : styles.button}\n                    value=\"about\"\n                    onChange={handleChange}\n                >About\n                </ToggleButton>\n                <ToggleButton\n                    name=\"nav\"\n                    variant=\"nav\"\n                    style={navigation.page === \"contact\" ? styles.buttonSelected : styles.button}\n                    value=\"contact\"\n                    onChange={handleChange}\n                >Contact\n                </ToggleButton>\n            </ToggleButtonGroup>\n        </div>\n    );\n}\n\nconst styles = {\n    buttonGroup: {\n        width: \"100%\",\n    },\n    button: {\n        backgroundColor: \"#777\",\n    },\n    buttonSelected: {\n        backgroundColor: \"#CCC\",\n        color: \"black\",\n    }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./StickyHeader.css\";\n\nimport Nav from \"../Nav/Nav\";\n\nconst StickyHeader = ({ isSticky, forwardedRef }) => \n    <div className={`sticky-header-wrapper ${isSticky ? \"sticky\" : \"\"}`} ref={forwardedRef}>\n        <div className={`sticky-header ${isSticky ? \"sticky\" : \"\"}`}>\n            <Nav />\n        </div>\n    </div>;\n\nexport default StickyHeader;","import React from \"react\";\nimport \"./ProfilePhoto.css\";\n\nconst ProfilePhoto = ({ src }) =>\n    <div className=\"profile-photo-wrapper\">\n        <img className=\"profile-photo\" src={src} />\n    </div>\n\nexport default ProfilePhoto;\n","import React from \"react\";\nimport { IconContext } from \"react-icons\";\n\nconst LinkIcon = ({ icon, color }) =>\n    <div className=\"link-icon\">\n        <IconContext.Provider value={\n            {\n                color: color,\n                size: \"1.8em\",\n                className: \"global-class-name\"\n            }\n        }>\n            {icon}\n        </IconContext.Provider>\n    </div>\n\nexport default LinkIcon;","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n// get icons from https://react-icons.github.io/react-icons/\nimport LinkIcon from \"./LinkIcon\";\nimport { FaGithub as GitHubIcon } from \"react-icons/fa\";\nimport { FaLinkedin as LinkedInIcon } from \"react-icons/fa\";\nimport { FaCircle as CircleIcon } from \"react-icons/fa\";\n\nimport \"./Link.css\";\n\nconst Link = ({ label, url }) =>\n    <Button\n        className={`link-button ${label.toLowerCase()}`}\n        variant=\"secondary\"\n        href={url}\n        activeStyle={\n            {\n                backgroundColor: \"blue\",\n            }\n        }\n    >\n        { label === \"GitHub\" ?\n            <LinkIcon icon={<GitHubIcon />} color=\"#24292E\"/>\n        : label === \"LinkedIn\" ?\n            <LinkIcon icon={<LinkedInIcon />} color=\"#24292E\"/>\n        : // default\n            <LinkIcon icon={<CircleIcon />} color=\"#24292E\"/>\n        }\n    </Button>;\n\nexport default Link;","import React from \"react\";\nimport Link from \"../Link/Link\";\n\nimport \"./LinkList.css\";\n\nconst LinkList = ({ links }) =>\n    <div className=\"link-list\">\n        { links && links[0] ?\n            links.map( ( link, index ) =>\n                <Link key={index} {...link} />\n            ) : <></>\n        }\n    </div>;\n\nexport default LinkList;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport LinkList from \"./LinkList\";\n\nconst LinkListContainer = () => {\n\n    const [links, updateLinks] = useState({\n        label: \"\",\n        url: \"\",\n    });\n\n    // ON MOUNT\n    useEffect( () => {\n        // const sheetURL = \"https://docs.google.com/spreadsheets/d/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/edit#gid=677653555\";\n        const sheetAsJSON = \"https://spreadsheets.google.com/feeds/list/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/4/public/full?alt=json\"\n\n        // FETCH link data\n        axios(sheetAsJSON)\n        // STORE link data to state\n        .then( response => {\n            // console.log(\"response.data\", response.data);\n            updateLinks( response.data.feed.entry.map( link => {\n                return {\n                    label: link.gsx$label.$t,\n                    url: link.gsx$url.$t\n                }\n            }));\n        })\n        .catch( err => console.log(\"error loading ajax\"));\n    },[]);\n\n    return <LinkList links={links} />\n}\n\nexport { LinkListContainer };","import React from \"react\";\nimport ProfilePhoto from \"../ProfilePhoto/ProfilePhoto\";\nimport { LinkListContainer as LinkList } from \"../LinkList/LinkList.container\";\n\nimport \"./Profile.css\";\n\nconst Profile = ({ name, pronouns, title, photo }) =>\n    <div className=\"profile-layout\">\n        <div className=\"profile-wrapper\">\n            <div className=\"profile\">\n                <ProfilePhoto src={photo} />\n                <div className=\"profile-name\">{name}</div>\n                <div className=\"profile-pronouns\">{pronouns}</div>\n                <div className=\"profile-title\">{title}</div>\n            </div>\n            <LinkList />\n        </div>\n    </div>\n\nexport default Profile;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Profile from \"./Profile\";\n\nconst ProfileContainer = () => {\n\n    const [profileData, updateProfileData] = useState({\n        name: \"\",\n        pronouns: \"\",\n        title: \"\",\n        photo: \"\",\n    });\n\n    // ON MOUNT\n    useEffect( () => {\n        // const sheetURL = 'https://docs.google.com/spreadsheets/d/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/edit#gid=677653555';\n        const sheetAsJSON = 'https://spreadsheets.google.com/feeds/list/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/2/public/full?alt=json'\n\n        // FETCH profile data\n        axios(sheetAsJSON)\n        // STORE profile data to state\n        .then( response => {\n            // console.log(\"response.data\", response.data);\n            updateProfileData( \n                {\n                    name: response.data.feed.entry[0].gsx$name.$t,\n                    pronouns: response.data.feed.entry[0].gsx$pronouns.$t,\n                    title: response.data.feed.entry[0].gsx$title.$t,\n                    photo: response.data.feed.entry[0].gsx$photo.$t,\n                }\n            );\n        })\n        .catch( err => console.log('error loading ajax'));\n    },[]);\n\n    return <Profile {...profileData} />;\n}\n\nexport { ProfileContainer };","import React from \"react\";\n\nimport { IconContext } from \"react-icons\";\n\nconst DevToolIcon = ({ icon, size = 1.8, color }) =>\n    <div className=\"dev-tool-icon\" style={{ padding: (1.8 - size)/2 + \"em\" }}>\n        <IconContext.Provider value={\n            {\n                color: color,\n                size: size + \"em\",\n                className: \"global-class-name\"\n            }\n        }>\n            {icon}\n        </IconContext.Provider>\n    </div>\n\nexport default DevToolIcon;","import React from \"react\";\nimport DevToolIcon from \"./DevToolIcon\";\n\n// get icons from https://react-icons.github.io/react-icons/\nimport { DiJsBadge as JavaScriptIcon } from \"react-icons/di\";\nimport { DiHtml5 as HTML5Icon } from \"react-icons/di\";\nimport { DiCss3 as CSS3Icon } from \"react-icons/di\";\nimport { DiRuby as RubyIcon } from \"react-icons/di\";\nimport { SiRails as RailsIcon } from \"react-icons/si\";\nimport { DiJqueryLogo as JQueryIcon } from \"react-icons/di\";\nimport { BiTransferAlt as AxiosIcon } from \"react-icons/bi\";\nimport { DiReact as ReactIcon } from \"react-icons/di\";\nimport { DiBootstrap as BootstrapIcon } from \"react-icons/di\";\nimport { DiNodejsSmall as NodeIcon } from \"react-icons/di\";\nimport { SiExpo as ExpoIcon } from \"react-icons/si\";\nimport { SiCplusplus as CppIcon } from \"react-icons/si\";\nimport { DiJava as JavaIcon } from \"react-icons/di\";\nimport { DiPython as PythonIcon } from \"react-icons/di\";\nimport { SiAutodesk as AutodeskIcon } from \"react-icons/si\";\nimport { DiCodeBadge as OpenSCADIcon } from \"react-icons/di\";\nimport { SiMicrosoftword as WordIcon } from \"react-icons/si\";\nimport { SiMicrosoftexcel as ExcelIcon } from \"react-icons/si\";\nimport { SiMicrosoftpowerpoint as PowerpointIcon } from \"react-icons/si\";\nimport { FaCircle as CircleIcon } from \"react-icons/fa\";\n\nimport \"./DevTool.css\";\n\nconst DevTool = ({ name }) =>\n    <div className=\"dev-tool-wrapper\">\n        { name === \"JavaScript\" ?\n            <DevToolIcon icon={<JavaScriptIcon />} color=\"#F1E05A\"/>\n        : name === \"HTML5\" ?\n            <DevToolIcon icon={<HTML5Icon />} color=\"#E44D26\"/>\n        : name === \"CSS3\" ?\n            <DevToolIcon icon={<CSS3Icon />} color=\"#384DE4\"/>\n        : name === \"Ruby\" ?\n            <DevToolIcon icon={<RubyIcon />} color=\"#701516\"/>\n        : name === \"Rails\" ?\n            <DevToolIcon icon={<RailsIcon />} color=\"#CC2100\"/>\n        : name === \"Ruby on Rails\" ?\n            <DevToolIcon icon={<RailsIcon />} color=\"#CC2100\"/>\n        : name === \"jQuery\" ?\n            <DevToolIcon icon={<JQueryIcon />} color=\"#3372A2\"/>\n        : name === \"axios\" ?\n            <DevToolIcon icon={<AxiosIcon />} color=\"#854195\"/>\n        : name === \"React\" ?\n            <DevToolIcon icon={<ReactIcon />} color=\"#60D8FF\"/>\n        : name === \"React Native\" ?\n            <DevToolIcon icon={<ReactIcon />} color=\"#60D8FF\"/>\n        : name === \"Bootstrap\" ?\n            <DevToolIcon icon={<BootstrapIcon />} color=\"#563D7C\"/>\n        : name === \"Node.js\" ?\n            <DevToolIcon icon={<NodeIcon />} color=\"#689F63\"/>\n        : name === \"Express.js\" ?\n            <DevToolIcon icon={<NodeIcon />} color=\"#899197\"/>\n        : name === \"Expo\" ?\n            <DevToolIcon icon={<ExpoIcon />} color=\"#020020\"/>\n        : name === \"C/C++\" ?\n            <DevToolIcon icon={<CppIcon />} color=\"#659AD2\"/>\n        : name === \"Java\" ?\n            <DevToolIcon icon={<JavaIcon />} color=\"#F29919\"/>\n        : name === \"Python\" ?\n            <DevToolIcon icon={<PythonIcon />} color=\"#F6D43C\"/>\n        : name === \"AutoDesk Inventor\" ?\n            <DevToolIcon icon={<AutodeskIcon />} color=\"#B86D22\"/>\n        : name === \"AutoCAD\" ?\n            <DevToolIcon icon={<AutodeskIcon />} color=\"#B42A24\"/>\n        : name === \"OpenSCAD\" ?\n            <DevToolIcon icon={<OpenSCADIcon />} color=\"#F1E94D\" />\n        : name === \"MS Word\" ?\n            <DevToolIcon icon={<WordIcon />} color=\"#2A569A\" />\n        : name === \"MS Excel\" ?\n            <DevToolIcon icon={<ExcelIcon />} color=\"#287145\" />\n        : name === \"MS Powerpoint\" ?\n            <DevToolIcon icon={<PowerpointIcon />} color=\"#CB4A32\" />\n        : // default\n            <DevToolIcon icon={<CircleIcon />} size={0.5} color=\"#777\"/>\n        }\n        <div className=\"dev-tool-name\">\n            {name}\n        </div>\n    </div>\n\nexport default DevTool;","import React from \"react\";\nimport \"./DevToolList.css\";\nimport DevTool from \"../DevTool/DevTool\";\n\nconst DevToolList = ({ toolNames }) =>\n    <div className=\"dev-tool-list\">\n        {toolNames && toolNames[0] ?\n            toolNames.map((toolName, index) =>\n                <DevTool key={index} name={toolName} />\n            )\n        : <></>}\n    </div>;\n\nexport default DevToolList;","import React from 'react'\nimport { Figure } from \"react-bootstrap\";\nimport DevToolList from \"../DevToolList/DevToolList\";\n\nimport \"./About.css\";\n\nconst About = ({ bio }) => \n    <div className=\"about-bio\">\n        {bio && bio[0] ? bio.map( (textBlock, index) =>\n            <Figure className={`about-bio-text-block ${textBlock.variant}`} key={index}>\n                    <>{textBlock.variant === \"devToolList\" ?\n                        <DevToolList toolNames={textBlock.content.split(',')} />\n                    : \n                        textBlock.content\n                    }</>\n            </Figure>\n        ) : <></>}\n    </div>\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport About from \"./About\";\n\nconst AboutContainer = () => {\n    const [ bio, setBio ] = useState({});\n\n    // ON MOUNT\n    useEffect( () => {\n        // const sheetURL = 'https://docs.google.com/spreadsheets/d/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/edit#gid=677653555';\n        const sheetAsJSON = 'https://spreadsheets.google.com/feeds/list/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/3/public/full?alt=json'\n\n        // FETCH bio data\n        axios(sheetAsJSON)\n        // STORE bio to state\n        .then( response => {\n            // console.log(\"response\", response.data.feed.entry);\n            setBio( response.data.feed.entry.map( link => {\n                return {\n                    variant: link.gsx$variant.$t,\n                    content: link.gsx$content.$t\n                }\n            }));\n        })\n        .catch( err => console.log('error loading ajax'));\n    },[]);\n\n    return <About bio={bio} />\n}\n\nexport { AboutContainer };","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport \"./Contact.css\";\n\nconst Contact = ({ name, pronouns, email, copyStatus, isMessageVisible, handleCopy }) => \n    <div className=\"contact\">\n        { name ?\n            <>\n                <div className=\"contact-name\">{name}</div>\n                <div className=\"contact-pronouns\">{pronouns}</div>\n                <CopyToClipboard\n                    onCopy={handleCopy}\n                    text={email}\n                >\n                    <Button className=\"contact-email\" variant=\"secondary\" >{email}</Button>\n                </CopyToClipboard>\n                <div className={`contact-email-status ${copyStatus ? \"active\" : \"inactive\"}`} role=\"status\" >\n                    { isMessageVisible ? \"copied to clipboard!\" : \"\" }\n                </div>\n            </>\n        :\n            <></>\n        }\n    </div>\n\nexport default Contact;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Contact from \"./Contact\";\n\nconst ContactContainer = () => {\n    \n    const [contactData, updateContactData] = useState({\n        name: \"\",\n        pronouns: \"\",\n        email: \"\",\n    });\n    \n    // ON MOUNT\n    useEffect( () => {\n        // const sheetURL = 'https://docs.google.com/spreadsheets/d/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/edit#gid=677653555';\n        const sheetAsJSON = 'https://spreadsheets.google.com/feeds/list/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/2/public/full?alt=json'\n        \n        // FETCH profile data\n        axios(sheetAsJSON)\n        // STORE profile data to state\n        .then( response => {\n            // console.log(\"response.data\", response.data);\n            updateContactData( \n                {\n                    name: response.data.feed.entry[0].gsx$name.$t,\n                    pronouns: response.data.feed.entry[0].gsx$pronouns.$t,\n                    email: response.data.feed.entry[0].gsx$email.$t,\n                }\n                );\n            })\n            .catch( err => console.log('error loading ajax'));\n        },[]);\n        \n    const [copyStatus, setCopyStatus] = useState(false);\n    const [isMessageVisible, setIsMessageVisible] = useState(false);\n    const handleCopy = () => {\n        setIsMessageVisible(true)\n        setCopyStatus(true);\n        setTimeout( () => {\n            setCopyStatus(false);\n            setTimeout( () => {\n                setIsMessageVisible(false)\n            }, 1000);\n        }, 1000);\n    }\n\n    return <Contact {...contactData} copyStatus={copyStatus} isMessageVisible={isMessageVisible} handleCopy={handleCopy} />;\n}\n\nexport { ContactContainer };","import React from \"react\";\nimport \"./Body.css\";\n\nconst Body = ({ children }) =>\n    <div className=\"body\">\n        {children}\n    </div>;\n\nexport default Body;","import React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport DevToolList from \"../DevToolList/DevToolList\";\nimport { GoRepo as RepoIcon } from \"react-icons/go\";\nimport { FaRegEye as DemoIcon } from \"react-icons/fa\";\n\nimport \"./ProjectCard.css\";\n\nconst ProjectCard = ({\n    title,\n    image,\n    description,\n    url,\n    repository,\n    frontend,\n    backend,\n    languages,\n    libraries\n}) =>\n    <Card className=\"project-card\">\n        <div className=\"project-card-image-clipzone\" >\n            <Card.Img className=\"project-card-image\" variant=\"top\" src={image} />\n        </div>\n        <Card.Body className=\"project-card-body\">\n            <Card.Title className=\"project-card-title\">{title}</Card.Title>\n            <Card.Text className=\"project-card-description\">{description}</Card.Text>\n            <Card.Body className=\"project-card-button-container\">\n            {repository ?\n                    <Button variant=\"secondary\" href={repository}>\n                        <RepoIcon /> repo\n                    </Button>\n                : <></> }\n                {frontend ?\n                    <Button variant=\"secondary\" href={frontend}>\n                        <RepoIcon /> frontend\n                    </Button>\n                : <></> }\n                {backend ?\n                    <Button variant=\"secondary\" href={backend}>\n                        <RepoIcon /> backend\n                    </Button>\n                : <></> }\n                {url ?\n                    <Button variant=\"secondary\" href={url}>\n                        <DemoIcon /> demo\n                    </Button>\n                : <></> }\n            </Card.Body>\n            <DevToolList toolNames={languages} />\n            <DevToolList toolNames={libraries} />\n        </Card.Body>\n    </Card>;\n\nexport default ProjectCard;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./ProjectPortfolio.css\";\n\nimport ProjectCard from \"../ProjectCard/ProjectCard\";\n\nconst ProjectPortfolio = () => {\n    const [projects, updateProjects] = useState([]);\n\n    // ON MOUNT\n    useEffect( () => {\n        // const sheetURL = \"https://docs.google.com/spreadsheets/d/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/edit#gid=677653555\";\n        const sheetAsJSON = \"https://spreadsheets.google.com/feeds/list/12WudbKp3rSdJJpJx7ANPEcC8J7unsYWwWaHBpXjtfPo/1/public/full?alt=json\"\n\n        // FETCH project data\n        axios(sheetAsJSON)\n        // STORE project data to state\n        .then( response => {\n            // console.log(\"response\", response.data.feed.entry);\n            updateProjects( response.data.feed.entry.map( project => {\n                return {\n                    title: project.gsx$title.$t,\n                    image: project.gsx$image.$t,\n                    description: project.gsx$description.$t,\n                    url: project.gsx$url.$t,\n                    repository: project.gsx$repository.$t,\n                    frontend: project.gsx$frontend.$t,\n                    backend: project.gsx$backend.$t,\n                    languages: project.gsx$languages.$t.split(\",\"),\n                    libraries: project.gsx$libraries.$t.split(\",\"),\n                }\n            }));\n        })\n        .catch( err => console.log(\"error loading ajax\"));\n    },[]);\n\n    return (\n        <div className=\"projects-container\">\n            {projects[0] ? projects.map( project => <ProjectCard {...project} /> ) : <></>}\n        </div>\n    );\n}\n\nexport default ProjectPortfolio;","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport useWindowDimensions from \"./hooks/useWindowDimensions\";\nimport NavigationContext from \"./hooks/NavigationContext\";\n\nimport Background from \"./components/Background/Background\";\nimport Layout from \"./components/Layout/Layout\";\nimport StickyHeader from \"./components/StickyHeader/StickyHeader\";\nimport { ProfileContainer as Profile } from \"./components/Profile/Profile.container\";\nimport { AboutContainer as About } from \"./components/About/About.container\";\nimport { ContactContainer as Contact } from \"./components/Contact/Contact.container\";\nimport Body from \"./components/Body/Body\";\nimport ProjectPortfolio from \"./components/ProjectPortfolio/ProjectPortfolio\";\n\n\nfunction App() {\n  const { height, width } = useWindowDimensions();\n\n  const [navigation, updateNavigation] = useState({ page: \"projects\" });\n  const setCurrentPage = (value) => {\n    updateNavigation({ ...navigation, page: value });\n  }\n\n  const [isStickyHeaderSticky, setIsStickyHeaderSticky] = useState(false);\n  const stickyHeaderRef = useRef(null);\n  const onScrollFrame = () => {\n    if(stickyHeaderRef) {\n      setIsStickyHeaderSticky(stickyHeaderRef.current.getBoundingClientRect().top <= 0);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <NavigationContext.Provider value={{\n          navigation,\n          setCurrentPage\n      }}>\n        <Background>\n          <Layout onScrollFrame={onScrollFrame} >\n            <Profile />\n            <StickyHeader isSticky={isStickyHeaderSticky} forwardedRef={stickyHeaderRef} />\n            <Body>\n              {navigation.page === \"projects\" ?\n                <ProjectPortfolio />\n              :navigation.page === \"about\" ?\n                <About />\n              :navigation.page === \"contact\" ?\n                <Contact />\n              :\n                <></>\n              }\n            </Body>\n          </Layout>\n        </Background>\n      </NavigationContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}